#!/bin/bash

set -e

source config

! [ $1 ] && echo "Missing argument" && exit 1

CONTAINER=$1; shift 1
TAG=$REPO/$APP:$CONTAINER
CONTEXT="$(get_context $CONTAINER)"
OPTIONS="-d --name $APP-$CONTAINER --pod $APP"

check_service $CONTAINER

# Parse command line arguments
while (( "$#" )); do
  case "$1" in
    --dev) DEV=true && shift 1;;
    --debug) DEBUG=true && shift 1;;
    --) shift && break;; # End of arguments
    *) echo "Error: Unsupported flag $1" >&2 && exit 1;;
  esac
done

if ! [ "$DEBUG" ]; then
  OPTIONS="$OPTIONS --rm"
fi

if [ -f "$CONTEXT/.env" ]; then
  OPTIONS="$OPTIONS --env-file $CONTEXT/.env"
fi

if [ "$DEV" ] && { [ $CONTAINER = "api" ] || [ $CONTAINER = "ui" ] ;}; then
  OPTIONS="$OPTIONS -v $CONTEXT/$CONTAINER:/$CONTAINER/$CONTAINER"
  if [ $CONTAINER = "api" ]; then
      OPTIONS="$OPTIONS -v $CONTEXT/tests:/$CONTAINER/tests"
  fi
fi

case $CONTAINER in
  es)
    DATA_DIR=$PROJECT_ROOT/data/elasticsearch
    [ -d $DATA_DIR ] || bash -c "mkdir -p $DATA_DIR && chmod 777 $DATA_DIR"
    OPTIONS="$OPTIONS -v $DATA_DIR:/usr/share/elasticsearch/data"
    ;;
  vis|api)
    [ -f $PROJECT_ROOT/.auth ] || { echo "Credentials not available" && exit 1 ;}
    ES_USER=elastic
    EXPR="(?<=PASSWORD\s$ES_USER\s=\s)\w+"
    ES_PSW="$(grep -oP $EXPR $PROJECT_ROOT/.auth)"

    OPTIONS="$OPTIONS -e 'ELASTICSEARCH_USERNAME=$ES_USER'"
    OPTIONS="$OPTIONS -e 'ELASTICSEARCH_PASSWORD=$ES_PSW'"
    ;;
  *) : ;;
esac

COMMAND="podman run $OPTIONS $TAG"
echo $COMMAND
bash -c "$COMMAND" && echo "Container $APP-$CONTAINER is started"
